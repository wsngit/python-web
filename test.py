from fastapi import FastAPI, HTTPException
from pydantic import BaseModel
from typing import Optional

app = FastAPI(title="Калькулятор Закона Ома", description="Вычисление напряжения (U), силы тока (I) и сопротивления (R)")
class OhmRequest(BaseModel):
    напряжение: Optional[float] = None
    ток: Optional[float] = None
    сопротивление: Optional[float] = None
class OhmResponse(BaseModel):
    напряжение: Optional[float] = None
    ток: Optional[float] = None
    сопротивление: Optional[float] = None
    формула: str
    сообщение: str
@app.post("/вычислить", response_model=OhmResponse)
async def вычислить_закон_ома(запрос: OhmRequest):
    переданные_параметры = sum(1 for param in [запрос.напряжение, запрос.ток, запрос.сопротивление] if param is not None)

    if переданные_параметры < 2:
        raise HTTPException(status_code=400, detail="Требуется как минимум два параметра для вычисления третьего")

    if переданные_параметры == 3:
        if abs(запрос.напряжение - запрос.ток * запрос.сопротивление) > 1e-10:
            raise HTTPException(status_code=400, detail="Переданные параметры не удовлетворяют закону Ома U = I * R")
        return OhmResponse(
            напряжение=запрос.напряжение,
            ток=запрос.ток,
            сопротивление=запрос.сопротивление,
            формула="U = I * R",
            сообщение="Все параметры предоставлены и удовлетворяют закону Ома"
        )

    if запрос.напряжение is None:
        напряжение = запрос.ток * запрос.сопротивление
        return OhmResponse(
            напряжение=round(напряжение, 6),
            ток=запрос.ток,
            сопротивление=запрос.сопротивление,
            формула=f"U = {запрос.ток} * {запрос.сопротивление}",
            сообщение=f"Вычисленное напряжение: {напряжение:.6f} В"
        )

    elif запрос.ток is None:
        ток = запрос.напряжение / запрос.сопротивление
        return OhmResponse(
            напряжение=запрос.напряжение,
            ток=round(ток, 6),
            сопротивление=запрос.сопротивление,
            формула=f"I = {запрос.напряжение} / {запрос.сопротивление}",
            сообщение=f"Вычисленная сила тока: {ток:.6f} А"
        )

    elif запрос.сопротивление is None:
        сопротивление = запрос.напряжение / запрос.ток
        return OhmResponse(
            напряжение=запрос.напряжение,
            ток=запрос.ток,
            сопротивление=round(сопротивление, 6),
            формула=f"R = {запрос.напряжение} / {запрос.ток}",
            сообщение=f"Вычисленное сопротивление: {сопротивление:.6f} Ом"
        )
@app.get("/")
async def корень():
    return {
        "сообщение": "API Калькулятора Закона Ома",
        "формула": "U = I * R",
        "эндпоинты": {
            "POST /вычислить": "Вычислить напряжение, силу тока или сопротивление",
            "GET /документация": "Посмотреть документацию API"
        }
    }
@app.get("/формула")
async def получить_формулу():
    return {
        "закон": "Закон Ома",
        "формула": "U = I * R",
        "переменные": {
            "U": "Напряжение (Вольты)",
            "I": "Сила тока (Амперы)",
            "R": "Сопротивление (Омы)"
        }
    }
@app.get("/примеры")
async def примеры_расчетов():
    return {
        "примеры": [
            {"ток": 2, "сопротивление": 5, "ожидаемое_напряжение": 10},
            {"напряжение": 12, "сопротивление": 6, "ожидаемый_ток": 2},
            {"напряжение": 24, "ток": 3, "ожидаемое_сопротивление": 8}
        ]
    }
if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
